name: release-deploy

on:
  release:
    types: [ published ]

jobs:
  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - uses: actions/setup-python@v4
      name: Install Python
      with:
        python-version: '3.10'

    - name: Build sdist
      run: |
        python -m pip install -U pip
        python -m pip install numpy cython
        python setup.py sdist

    - name: Store artifacts
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: ./dist

  build-wheels:
    name: Build wheel for cp${{ matrix.python }}-${{ matrix.platform_id }}-${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows 64 bit
          - os: windows-latest
            python: 37
            platform_id: win_amd64
          - os: windows-latest
            python: 38
            platform_id: win_amd64
          - os: windows-latest
            python: 39
            platform_id: win_amd64
          - os: windows-latest
            python: 310
            platform_id: win_amd64
          - os: windows-latest
            python: 311
            platform_id: win_amd64

          # Linux 64 bit manylinux2014
          - os: ubuntu-latest
            python: 37
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 38
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 39
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 310
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014
          - os: ubuntu-latest
            python: 311
            platform_id: manylinux_x86_64
            manylinux_image: manylinux2014

          # Linux aarch64
          - os: ubuntu-latest
            python: 37
            platform_id: manylinux_aarch64
          - os: ubuntu-latest
            python: 38
            platform_id: manylinux_aarch64
          - os: ubuntu-latest
            python: 39
            platform_id: manylinux_aarch64
          - os: ubuntu-latest
            python: 310
            platform_id: manylinux_aarch64
          - os: ubuntu-latest
            python: 311
            platform_id: manylinux_aarch64

          # MacOS x86_64
          - os: macos-latest
            python: 37
            platform_id: macosx_x86_64
          - os: macos-latest
            python: 38
            platform_id: macosx_x86_64
          - os: macos-latest
            python: 39
            platform_id: macosx_x86_64
          - os: macos-latest
            python: 310
            platform_id: macosx_x86_64
          - os: macos-latest
            python: 311
            platform_id: macosx_x86_64

          # MacOS arm64
          - os: macos-latest
            python: 38
            platform_id: macosx_arm64
          - os: macos-latest
            python: 39
            platform_id: macosx_arm64
          - os: macos-latest
            python: 310
            platform_id: macosx_arm64
          - os: macos-latest
            python: 311
            platform_id: macosx_arm64

    steps:
    - uses: actions/checkout@v3

    - name: Set up QEMU
      if: ${{ matrix.platform_id == 'manylinux_aarch64' }}
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm64

    - uses: actions/setup-python@v4
      name: Install Python
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install -U pip
        python -m pip install cibuildwheel==2.12.0

    - name: Build wheels
      env:
        CIBW_BUILD: cp${{ matrix.python }}-${{ matrix.platform_id }}
        CIBW_ARCHS: all
        CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
        CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux_image }}
        CIBW_MANYLINUX_AARCH64_IMAGE: ${{ matrix.manylinux_image }}
        CIBW_BUILD_VERBOSITY: 1
      run: |
        python --version
        python -m cibuildwheel --output-dir dist

    - name: Store artifacts
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: ./dist

  # Todo: download and test the packages after we have working tests

  # See: https://github.com/pypa/gh-action-pypi-publish/discussions/15
  deploy:
    name: Upload wheels to PyPI
    needs: [ build-wheels ]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    environment:
      name: pypi
      url: https://pypi.org/p/pyjpegls
    permissions:
      id-token: write

    steps:
    - name: Download the wheels
      uses: actions/download-artifact@v3
      with:
        name: wheels
        path: dist/

    - name: Publish package to PyPi
      uses: pypa/gh-action-pypi-publish@release/v1
